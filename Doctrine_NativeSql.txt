** Native Query
thuc hien native Sql select query va map ket qua voi entity hoac ResultSetMapping object.
Can liet ke cac cot column can lay trong ResultSetMapping voi thuoc tinh cua entity
-> co the map bat ky SQL code voi object, highly vendor-optimized SQL, stored procedure

Dung ResultSetMappingBuilder de generate ResultSetMapping dua tren Entities.

Native Query chi ho tro SELECT, cac lenh DELETE, UPDATE, INSERT dung EntityManager#executeUpdate()

+ de tao NativeQuery dung EntityManager#createNativeQuery($sql, $resultSetMapping)

<?php
use Doctrine\ORM\Query\ResultSetMapping;

$rsm = new ResultSetMapping();
// build rsm here

$query = $entityManager->createNativeQuery('SELECT id, name, discr FROM users WHERE name = ?', $rsm);
$query->setParameter(1, 'romanb');

$users = $query->getResult();

+ ResultSetMappingBuilder: dung de build ResultSetMapping, generate SELECT query 
+ ResultSetMappingBuilder extends ResultSetMapping
** chua ho tro entity co ke thua

<?php

use Doctrine\ORM\Query\ResultSetMappingBuilder;

$sql = "SELECT u.id, u.name, a.id AS address_id, a.street, a.city " .
       "FROM users u INNER JOIN address a ON u.address_id = a.id";

$rsm = new ResultSetMappingBuilder($entityManager);
$rsm->addRootEntityFromClassMetadata('MyProject\User', 'u');
$rsm->addJoinedEntityFromClassMetadata('MyProject\Address', 'a', 'u', 'address', array('id' => 'address_id'));

+ generate native SELECT qua generateSelectClause($tableAliases):
<?php

$selectClause = $rsm->generateSelectClause(array(
    'u' => 't1',
    'g' => 't2'
));
$sql = "SELECT " . $selectClause . " FROM users t1 JOIN groups t2 ON t1.group_id = t2.id";

* ResultSetMapping gom cac thanh phan:
+ Entity result:
Them entity result qua ResultSetMapping#addEntityResult($class, $alias)
	$class: full name cua entity class
	$alias: unique alias
* 1 ResultSetMapping luon can 1 tap cac field result + entity result | joined entity result

+ Joined entity result:
Them joined entity result qua ResultSetMapping#addJoinedEntityResult($class, $alias, $parentAlias, $relation)
	$class: ten class cua joined entity
	$alias: unique alias dung cho joined entity
	$parentAlias: alias cua entity result, la parent cua joined result
	$relation: field lien ket parent entity voi joined entity
+ Field result: column trong ket qua tra ve map voi 1 field trong entity hoac joined entity"
ResultSetMapping#addFieldResult($alias, $columnName, $fieldName)
	$alias: alias cua entity result hoac joined entity result
	$columnName: ten cot cua sql resultSet
	$fieldName: ten field cua entity hoac joined entity
+ Scalar result: result tra ve tuong ung voi aggregate function, scalar functions
AVG, count, first, last, max, min, sum, ucase, lcase, mid, len, round, now, format
ResultSetMapping#addScalarResult($columnName, $alias)
	$columnName: ten cot trong sql result
	$alias: alias cua scalar result thuong la ket qua cua cau lenh tinh toan gop (group by): sum,...
+ Meta result: the hien meta-informatin nhu khoa ngoai, discriminator column:
ResultSetMapping#addMetaResult($alias, $columnAlias, $columnName, $isIdentifierColumn = false)

VD: ResultSetMapping voi 1 entity User (no relation)
<?php
// Equivalent DQL query: "select u from User u where u.name=?1"
// User owns no associations.
$rsm = new ResultSetMapping;
$rsm->addEntityResult('User', 'u');
$rsm->addFieldResult('u', 'id', 'id');
$rsm->addFieldResult('u', 'name', 'name');

$query = $this->_em->createNativeQuery('SELECT id, name FROM users WHERE name = ?', $rsm);
$query->setParameter(1, 'romanb');

$users = $query->getResult();

+ User co relation voi bang khac, User la owning side va co khoa ngoai:
<?php
// Equivalent DQL query: "select u from User u where u.name=?1"
// User owns an association to an Address but the Address is not loaded in the query.
$rsm = new ResultSetMapping;
$rsm->addEntityResult('User', 'u');
$rsm->addFieldResult('u', 'id', 'id');
$rsm->addFieldResult('u', 'name', 'name');
$rsm->addMetaResult('u', 'address_id', 'address_id');

$query = $this->_em->createNativeQuery('SELECT id, name, address_id FROM users WHERE name = ?', $rsm);
$query->setParameter(1, 'romanb');

$users = $query->getResult();

* khoa ngoai trong Doctrine dung lazy khi query objects
* voi associtions la lazy thi can addMetaResult khoa ngoai.
* Voi association la fetch-joined thi khong can addMetaResult khoa ngoai
+ User co relation voi Address, va cau lenh sql join
<?php
// Equivalent DQL query: "select u from User u join u.address a WHERE u.name = ?1"
// User owns association to an Address and the Address is loaded in the query.
$rsm = new ResultSetMapping;
$rsm->addEntityResult('User', 'u');
$rsm->addFieldResult('u', 'id', 'id');
$rsm->addFieldResult('u', 'name', 'name');
$rsm->addJoinedEntityResult('Address' , 'a', 'u', 'address');
$rsm->addFieldResult('a', 'address_id', 'id');
$rsm->addFieldResult('a', 'street', 'street');
$rsm->addFieldResult('a', 'city', 'city');

$sql = 'SELECT u.id, u.name, a.id AS address_id, a.street, a.city FROM users u ' .
       'INNER JOIN address a ON u.address_id = a.id WHERE u.name = ?';
$query = $this->_em->createNativeQuery($sql, $rsm);
$query->setParameter(1, 'romanb');

$users = $query->getResult();